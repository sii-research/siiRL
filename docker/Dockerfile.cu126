# Copyright 2025, Shanghai Innovation Institute. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

FROM nvcr.io/nvidia/cuda:12.6.3-cudnn-devel-ubuntu22.04

LABEL maintainer="SII AI Infra Team"

# base environment
RUN apt update \
    && apt install -y rdma-core ibverbs-providers ibverbs-utils libnuma-dev  \
    && apt install -y python3 python3-pip \
    && ln -sf /usr/bin/python3 /usr/bin/python  \
    && python -m pip install -U pip \
    && pip install -U setuptools wheel

# dev tools
RUN apt install -y git cmake ninja-build vim

# python packages
RUN pip install torch==2.7.1 torchvision==0.22.1 torchaudio==2.7.1   \
    && pip install flash-attn==2.8.2 --no-build-isolation   \
    && pip install vllm==0.10.0    \
    && pip install accelerate codetiming datasets dill hydra-core pandas wandb loguru tensorboard qwen_vl_utils \
    && pip install mbridge \
    && pip install numpy==1.26.4 

# apex
RUN git clone https://github.com/NVIDIA/apex.git \
    && cd apex \
    && MAX_JOBS=16 pip install -v --disable-pip-version-check --no-cache-dir --no-build-isolation --config-settings "--build-option=--cpp_ext" --config-settings "--build-option=--cuda_ext" ./    \
    && cd .. && rm -rf apex

# optional: sglang
RUN pip install 'sglang[all]==0.4.10.post2' \
    && pip install outlines==1.2.3 xgrammar==0.1.21

# Install TransformerEngine
RUN export NVTE_FRAMEWORK=pytorch && pip3 install --resume-retries 999 --no-deps --no-cache-dir --no-build-isolation git+https://github.com/NVIDIA/TransformerEngine.git@v2.3

# Install Megatron-LM
RUN pip3 install --no-deps --no-cache-dir git+https://github.com/NVIDIA/Megatron-LM.git@core_v0.12.2